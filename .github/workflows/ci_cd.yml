name: CI/CD Pipeline

on:
  push:
    branches:
      - master  

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        push: true
        tags:  jorgeiras/buscainstrumentos_back:latest

  deploy:
    needs: build  
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to server
      uses: appleboy/ssh-action@v0.1.4
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          if [ ! -d "/home/djangouser/buscainstrumentos_back" ]; then
            # Clone the repo if it does not exist
            git clone https://github.com/jorgeiras/buscainstrumentos_back.git /home/djangouser/buscainstrumentos_back
            cd /home/djangouser/buscainstrumentos_back
          else
            # Pull the latest changes in the repo
            cd /home/djangouser/buscainstrumentos_back
            git pull
          fi
          # Now handle the .env file updates
          echo "DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" > .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASS=${{ secrets.DB_PASS }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "DROPLET_IP=${{ secrets."DROPLET_IP }}" >> .env
          # Run docker-compose
          docker compose up --build -d

